version: 2

defaults: &defaults
  docker:
    - image: circleci/golang:1.16
    #- image: circleci/mongo:4.2
  working_directory: /go/src/github.com/spikeekips/mitum-fixed-network

workspace: &workspace
  attach_workspace:
    at: /

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-mod-{{ checksum "go.sum" }}

      - run:
          name: Download dependencies
          command: go mod download

      - save_cache:
          key: dependency-cache-mod-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod/

      - persist_to_workspace:
          root: /
          paths:
            - go/pkg/mod/
            - go/src/github.com/spikeekips/mitum-fixed-network

  lint:
    <<: *defaults
    steps:
      - <<: *workspace
      - run:
          name: Install golangci-lint
          command: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin $(curl -s https://api.github.com/repos/golangci/golangci-lint/releases/latest | grep "tag_name" | sed -e 's/.*://g' -e 's/,//g' -e 's/"//g')

      - run:
         name: Run golangci-lint
         command: golangci-lint run

      - run:
         name: Run govet
         command: go vet -tags 'test' ./...

  go-test:
    <<: *defaults
    steps:
      - <<: *workspace
      - run:
         name: unit test
         command: >
            for i in $(go list ./...);
            do
                n=$(echo $i | sed -e "s@github.com/spikeekips/mitum-fixed-network@.@g")
                echo "> testing" $n
                go test -race -tags "test" -v -timeout 20m $n -run .
                e=$?
                echo "< exit" $e
                [ $e -ne 0 ] && exit $e
            done;
            exit 0

      - run:
         name: codecov
         command: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  build:
    jobs:
      - build

  unittests:
    jobs:
      - build
      - lint:
          requires:
            - build
      - go-test:
          requires:
            - build
